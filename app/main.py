# main.py
import streamlit as st
import pandas as pd
import plotly.express as px
import os
import sys

# üõ†Ô∏è –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists("db/my.db"):
    import sys
    import os
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    import ddl
    ddl.run_ddl()


sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from db import fetch_joined_data


st.set_page_config(page_title="–û–Ω–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂–∏", layout="wide")

st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–Ω–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂")
st.markdown("–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å –ø–æ –¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞")

# üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
@st.cache_data
def load_data():
    df = fetch_joined_data()
    df["revenue"] = df["price"] * df["amount"]
    df["orderdate"] = pd.to_datetime(df["orderdate"])
    return df

df = load_data()

# üìç –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤
with st.sidebar:
    st.header("–§–∏–ª—å—Ç—Ä—ã")
    cities = st.multiselect("–ì–æ—Ä–æ–¥–∞", df["city"].dropna().unique())
    categories = st.multiselect("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", df["categoryname"].dropna().unique())

# üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
df_filtered = df.copy()
if cities:
    df_filtered = df_filtered[df_filtered["city"].isin(cities)]
if categories:
    df_filtered = df_filtered[df_filtered["categoryname"].isin(categories)]

# üìà KPI
col1, col2, col3, col4 = st.columns(4)
col1.metric("üîÅ –ü—Ä–æ–¥–∞–∂", f"{df_filtered['amount'].sum():,.0f}")
col2.metric("üë• –ö–ª–∏–µ–Ω—Ç–æ–≤", df_filtered['clientid'].nunique())
col3.metric("üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞", f"{df_filtered['price'].mean():.2f} $")
col4.metric("üì¶ –í—ã—Ä—É—á–∫–∞", f"{df_filtered['revenue'].sum():,.0f} $")

# üìä –ì—Ä–∞—Ñ–∏–∫–∏
st.subheader("üì¶ –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
fig1 = px.bar(
    df_filtered.groupby("categoryname")["amount"].sum().sort_values().reset_index(),
    x="amount", y="categoryname", orientation="h",
    title="–û–±—ä—ë–º –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
)
st.plotly_chart(fig1, use_container_width=True)

st.subheader("üèôÔ∏è –¢–æ–ø –≥–æ—Ä–æ–¥–æ–≤")
fig2 = px.bar(
    df_filtered.groupby("city")["amount"].sum().sort_values(ascending=False).head(10).reset_index(),
    x="city", y="amount",
    title="–ì–æ—Ä–æ–¥–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–∫–∞–∑–æ–≤"
)
st.plotly_chart(fig2, use_container_width=True)

st.subheader("üìÜ –í—ã—Ä—É—á–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º")
df_filtered["month"] = df_filtered["orderdate"].dt.to_period("M").astype(str)
fig3 = px.line(
    df_filtered.groupby("month")["revenue"].sum().reset_index(),
    x="month", y="revenue",
    title="–î–∏–Ω–∞–º–∏–∫–∞ –≤—ã—Ä—É—á–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º"
)
st.plotly_chart(fig3, use_container_width=True)

st.subheader("üßç –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É")
gender_data = df_filtered["gender"].value_counts().reset_index()
gender_data.columns = ["gender", "count"]
fig4 = px.pie(gender_data, values="count", names="gender", title="–ì–µ–Ω–¥–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤")
st.plotly_chart(fig4, use_container_width=True)

